/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.google.cloud.tools:appengine-gradle-plugin:2.0.1"
        // ./gradlew dependencyCheckAnalyze
        classpath 'org.owasp:dependency-check-gradle:5.2.0'
    }
}
plugins {
    id 'java'
    id "org.galaxx.gradle.jandex" version "1.0.2"
    id 'ru.vyarus.quality' version '3.4.0'
    id 'io.quarkus' version '0.28.1'
    id 'jacoco'
    id "com.dorongold.task-tree" version "1.4"
}

group 'example'
version '1.0'

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'org.owasp.dependencycheck'
    apply plugin: 'ru.vyarus.quality'
    apply plugin: 'io.quarkus'
    apply plugin: 'jacoco'


    repositories {
        mavenCentral()
    }

    ext {
        objectifyVersion = "6.0.4"
        lombokVersion = "1.18.8"
        jacksonVersion = "2.9.10"
        jodaVersion = "2.7"
        swaggerVersion = "2.0.7"
        junitVersion = "5.3.1"
        quarkusVersion = "0.28.1"
        commonsLangVersion = "3.9"
    }

    sourceCompatibility = 11
    version '1.0'

    configurations {
        implementation {
            exclude group: 'org.jboss.slf4j', module: 'slf4j-jboss-logging'
        }
        all {
//            resolutionStrategy.force "org.apache.commons:commons-lang3:${commonsLangVersion}"
        }
    }

    dependencies {

        compile "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

//        implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
        implementation 'javax.annotation:javax.annotation-api:1.3.2'

        implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation "commons-io:commons-io:2.6"
        implementation "org.reflections:reflections:0.9.11"

        implementation enforcedPlatform("io.quarkus:quarkus-bom:${quarkusVersion}")
//        implementation platform("io.quarkus:quarkus-bom:${quarkusVersion}")
        implementation 'io.quarkus:quarkus-resteasy'
        implementation 'io.quarkus:quarkus-resteasy-jackson'

        implementation "org.jboss:jandex:2.0.4.Final"

        //implementation "javax.xml.bind:jaxb-api:2.1"

        implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}"

        // config
        implementation 'org.apache.commons:commons-configuration2:2.5'

        // totp
        implementation 'com.warrenstrange:googleauth:1.1.2'
        // jwt, jwk
        implementation "com.nimbusds:nimbus-jose-jwt:7.3"

        implementation "io.swagger.core.v3:swagger-jaxrs2:${swaggerVersion}"

        // validation
        implementation 'io.quarkus:quarkus-hibernate-validator'
        implementation "org.glassfish:javax.el:3.0.1-b09"

        // cache
        implementation 'com.github.ben-manes.caffeine:caffeine:2.8.0'

        // push notification ( APNS )
        implementation "com.turo:pushy:0.13.9"
        // push notfication ( FCM )
        implementation "com.google.firebase:firebase-admin:6.10.0"


        // junit5
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

        // mockito
        testImplementation "org.mockito:mockito-core:2.28.2"
        testImplementation "org.mockito:mockito-junit-jupiter:2.28.2"
        // assertj
        testImplementation "org.assertj:assertj-core:3.12.2"
        // easy random
        testImplementation "org.jeasy:easy-random-core:4.0.0"

        testImplementation "io.quarkus:quarkus-junit5:${quarkusVersion}"
        testImplementation "io.rest-assured:rest-assured:3.3.0"

        testImplementation "uk.org.lidalia:slf4j-test:1.1.0"
        testImplementation "commons-beanutils:commons-beanutils:1.9.3"

    }

    test {
        useJUnitPlatform()
    }

    quality {
        // https://xvik.github.io/gradle-quality-plugin/3.4.0/
        spotbugsVersion = '3.1.11'
        spotbugs = true // false to disable automatic plugin activation
        spotbugsEffort = 'max'  // min, less, more or max
        spotbugsLevel = 'medium' // low, medium, high
        enabled = false
    }
    jacoco {
        toolVersion = "0.8.4"
    }
    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }
}

configure(subprojects.findAll { it.name == 'xxx' }) {

    apply plugin: "com.google.cloud.tools.appengine-appyaml"

    dependencies {
        implementation project(":core")
        testImplementation project(':core').sourceSets.test.output
        implementation "com.googlecode.objectify:objectify:${objectifyVersion}"
        implementation 'com.google.cloud:google-cloud-pubsub:1.90.0'
        implementation 'com.google.cloud:google-cloud-logging-logback:0.108.0-alpha'
        implementation "com.google.cloud:google-cloud-tasks:1.17.0"
        implementation 'com.google.apis:google-api-services-androidpublisher:v3-rev103-1.25.0'
        implementation 'com.google.auth:google-auth-library-oauth2-http:0.17.1'
        // classifier=tests
        testImplementation "com.google.api:gax-grpc:1.48.1:testlib"
        testImplementation "com.google.api.grpc:grpc-google-iam-v1:0.12.0"
    }

}


